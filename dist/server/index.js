"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_1 = __importDefault(require("dotenv"));
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const logger_1 = __importDefault(require("../utils/logger"));
const routes_1 = __importDefault(require("./routes"));
const core_1 = __importDefault(require("../worker/core"));
const ip_handler_1 = require("./middleware/ip-handler");
const rate_limit_1 = require("./middleware/rate-limit");
const ngrok_1 = __importDefault(require("../utils/ngrok"));
const swagger_1 = __importDefault(require("../config/swagger"));
const swagger_ui_express_1 = __importDefault(require("swagger-ui-express"));
dotenv_1.default.config();
const port = process.env.PORT || 8080;
const app = (0, express_1.default)();
app.use((0, cors_1.default)());
app.use(express_1.default.json());
app.set('trust proxy', true);
app.use(ip_handler_1.ipHandler);
app.use('/api', rate_limit_1.rateLimitter, routes_1.default);
app.use('/api-docs', swagger_ui_express_1.default.serve, swagger_ui_express_1.default.setup(swagger_1.default));
core_1.default.start();
(0, ngrok_1.default)();
app.listen(port, () => {
    logger_1.default.info(`Server is running on port ${port}`);
});
exports.default = app;
